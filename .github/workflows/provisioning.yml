name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
      
    - name: Confirm Git identity
      run: |
        git config --global user.email "alan.ahmad@devoteam.com"
        git config --global user.name "alandevoteam"

    - name: mvn deploy snapshot (Nexus)
      run: mvn clean deploy -DskipTests
      
    - name: mvn release prepare (Nexus)
      run: mvn release:prepare -B -DskipTests=true -DscmCommentPrefix="[skip ci]"

    - name: mvn release perform (Nexus)
      run: mvn release:perform -DskipTests -DscmCommentPrefix="[skip ci]"

    - name: Get warfile from Nexus repository
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/
        wget http://localhost:8081/repository/maven-releases/org/springframework/samples/spring-framework-petclinic/$VERSION/spring-framework-petclinic-$VERSION.war
      env:
        VERSION: 5.3.14
        
    - name: Run Terraform, set up infrastructure in AZURE CLOUD
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/terraform
        terraform init
        terraform apply -auto-approve
        
    - name: Wait till all the resources are available in AZURE CLOUD
      run: sleep 80
        
    - name: configure test environment on testing-VM with Ansible, install dependencies
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_testing.yml

    - name: test environment configured, start jmeter loadtest
      run: ~/jmeter/bin/jmeter -n -t ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/petclinic_loadtest_plan.jmx -l ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/file.jtl

    - name: No fallback, Jmeter loadtest passed, Push docker image to docker hub
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_testinghub.yml

    - name: Prepare acceptance environment on VM-2, pull image
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_acceptance.yml

    - name: acceptance environment created, start selenium test, fallback if test fails
      run: python3 ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/seleniumtest.py

    - name: move production to acceptance-VM
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_production.yml

    - name: Check petclinic in browser
      run: google-chrome prodpetclinic.westeurope.cloudapp.azure.com/petclinic
      
    - name: Run Terraform destroy, delete TEST & ACCEPTANCE environments
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/terraform
        terraform state pull > bkup.json
        terraform state list
        terraform state rm azurerm_dev_test_global_vm_shutdown_schedule.production
        terraform state rm azurerm_linux_virtual_machine.production
        terraform state rm azurerm_network_interface.production
        terraform state rm azurerm_network_security_group.production
        terraform state rm azurerm_network_security_rule.production
        terraform state rm azurerm_public_ip.production
        terraform state rm azurerm_resource_group.test
        terraform state rm azurerm_subnet.production
        terraform state rm azurerm_subnet_network_security_group_association.production
        terraform state rm azurerm_virtual_network.production
        terraform destroy -auto-approve
