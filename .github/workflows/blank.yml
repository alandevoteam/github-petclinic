name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
      
    - name: Confirm Git identity
      run: |
        git config --global user.email "alan.ahmad@devoteam.com"
        git config --global user.name "alandevoteam"

    - name: Extract version from POM file
      id: extract_version
      run: |
        version=$(grep -oP '(?<=<version>)[^<]+' pom.xml)
        version=$(echo $version | grep -oP '^\d+\.\d+\.\d+')
        echo "::set-output name=version::$version"

    - name: Maven deploy
      run: mvn clean deploy -DskipTests
      
    - name: Maven release
      run: mvn release:prepare -B -DskipTests=true -DscmCommentPrefix="[skip ci]"

    - name: Maven release
      run: mvn release:perform -DskipTests -DscmCommentPrefix="[skip ci]"

    - name: Get warfile from Nexus repository
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/
        wget "http://localhost:8081/repository/maven-releases/org/springframework/samples/spring-framework-petclinic/${{ steps.extract_version.outputs.version }}/spring-framework-petclinic-${{ steps.extract_version.outputs.version }}.war"

    - name: Update release version in ansible inventory
      run: |
        echo "[testing-vm]" > ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini
        echo "testpetclinic.westeurope.cloudapp.azure.com ansible_user=adminuser ansible_ssh_pass=P@assword1234. VERSION=${{ steps.extract_version.outputs.version }}" >> ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini
        echo "" >> ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini

        echo "[production-vm]" >> ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini
        echo "prodpetclinic.westeurope.cloudapp.azure.com ansible_user=adminuser ansible_ssh_pass=P@assword1234. VERSION=${{ steps.extract_version.outputs.version }}" >> ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini
    
    - name: Update Selenium script with version number
      run: sed -i "s|http://xptpetclinic.westeurope.cloudapp.azure.com:8080/petclinic-|http://prodpetclinic.westeurope.cloudapp.azure.com/petclinic-${{ steps.extract_version.outputs.version }}/|g" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/seleniumscript.py
   
    - name: Update JMeter script with version
      run: sed -i "s|<stringProp name=\"HTTPSampler.path\">/petclinic-/</stringProp>|<stringProp name=\"HTTPSampler.path\">/petclinic-${{ steps.extract_version.outputs.version }}/</stringProp>|" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/petclinic_loadtest_plan.jmx

    - name: Set up infrastructure in AZURE CLOUD
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/terraform
        terraform init
        terraform apply -auto-approve
        
    - name: Terraform Infrastructure task completed
      run: sleep 66
        
    - name: Prepare test-environment on Test-VM
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_testing.yml

    - name: Test-environment configuration completed
      run: sleep 10

    - name: Start Jmeter loadtest, fall back if test fails.
      run: /opt/jmeter/bin/jmeter -n -t ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/petclinic_loadtest_plan.jmx -l ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/file.jtl

    - name: Loadtest passed, Push docker image to dockerhub
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_testinghub.yml

    - name: Configure acceptance environment for pre-production, pull image from Docker Hub
      run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/inventory.ini --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/ansible/playbook_production.yml

    - name: Acceptance-environment configuration completed
      run: sleep 5
      
    - name: Start Selenium script, fall back if test fails.
      run: python3 ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/seleniumscript.py
  
    - name: Webapp is in production!
      run: sleep 10
      
    - name: Destroy TEST environment
      run: |
        cd ~/actions-runner/_work/github-petclinic/github-petclinic/src/test/terraform
        terraform state pull > bkup.json
        terraform state list
        terraform state rm azurerm_dev_test_global_vm_shutdown_schedule.production
        terraform state rm azurerm_linux_virtual_machine.production
        terraform state rm azurerm_network_interface.production
        terraform state rm azurerm_network_security_group.production
        terraform state rm azurerm_network_security_rule.production
        terraform state rm azurerm_network_security_rule.production2
        terraform state rm azurerm_network_security_rule.production3
        terraform state rm azurerm_public_ip.production
        terraform state rm azurerm_resource_group.test
        terraform state rm azurerm_subnet.production
        terraform state rm azurerm_subnet_network_security_group_association.production
        terraform state rm azurerm_virtual_network.production
        terraform destroy -auto-approve
  
